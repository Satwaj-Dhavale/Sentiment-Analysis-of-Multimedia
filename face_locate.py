# -*- coding: utf-8 -*-
"""Face_detection.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fonHY4Znd1qlLnKNGBbSQUVYTdmHuc2S
"""
#Just using an example image for now

from matplotlib import pyplot as plt
from mtcnn.mtcnn import MTCNN
from numpy import asarray
from PIL import Image
from matplotlib.patches import Rectangle


def face_detect(image):
    detector = MTCNN()
    faces = detector.detect_faces(image)
    for face in faces:
        print(face)
    return faces


def highlight_faces(image_path, faces):
  # display image
    image = plt.imread(image_path)
    plt.imshow(image)

    ax = plt.gca()

    # for each face, draw a rectangle based on coordinates
    for face in faces:
        x, y, width, height = face['box']
        face_border = Rectangle((x, y), width, height,
                          fill=False, color='red')
        ax.add_patch(face_border)
    plt.show()

# highlight_faces('image_human.jpg', faces)


def extract_face_from_image(image_path, required_size=(200, 200)):
  # load image and detect faces
    image = plt.imread(image_path)
    detector = MTCNN()
    faces = detector.detect_faces(image)

    face_images = []

    for face in faces:
        # extract the bounding box from the requested face
        x1, y1, width, height = face['box']
        x2, y2 = x1 + width, y1 + height

        # extract the face
        face_boundary = image[y1:y2, x1:x2]

        # resize pixels to the model size
        face_image = Image.fromarray(face_boundary)
        face_image = face_image.resize(required_size)
        face_array = asarray(face_image)
        face_images.append(face_array)

    return face_images


# extracted_face = extract_face_from_image('image_human.jpg')
# # Display the first face from the extracted faces
# plt.imshow(extracted_face[0])
# plt.show()

